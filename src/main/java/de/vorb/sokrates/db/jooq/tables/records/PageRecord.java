/*
 * This file is generated by jOOQ.
*/
package de.vorb.sokrates.db.jooq.tables.records;


import de.vorb.sokrates.db.jooq.tables.Page;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PageRecord extends UpdatableRecordImpl<PageRecord> implements Record6<Long, String, String, Timestamp, Timestamp, byte[]> {

    private static final long serialVersionUID = 1733162303;

    /**
     * Setter for <code>PUBLIC.PAGE.ID</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.PAGE.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>PUBLIC.PAGE.PATH</code>.
     */
    public void setPath(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.PAGE.PATH</code>.
     */
    public String getPath() {
        return (String) get(1);
    }

    /**
     * Setter for <code>PUBLIC.PAGE.TITLE</code>.
     */
    public void setTitle(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.PAGE.TITLE</code>.
     */
    public String getTitle() {
        return (String) get(2);
    }

    /**
     * Setter for <code>PUBLIC.PAGE.CREATED_AT</code>.
     */
    public void setCreatedAt(Timestamp value) {
        set(3, value);
    }

    /**
     * Getter for <code>PUBLIC.PAGE.CREATED_AT</code>.
     */
    public Timestamp getCreatedAt() {
        return (Timestamp) get(3);
    }

    /**
     * Setter for <code>PUBLIC.PAGE.LAST_MODIFIED_AT</code>.
     */
    public void setLastModifiedAt(Timestamp value) {
        set(4, value);
    }

    /**
     * Getter for <code>PUBLIC.PAGE.LAST_MODIFIED_AT</code>.
     */
    public Timestamp getLastModifiedAt() {
        return (Timestamp) get(4);
    }

    /**
     * Setter for <code>PUBLIC.PAGE.CHECKSUM</code>.
     */
    public void setChecksum(byte... value) {
        set(5, value);
    }

    /**
     * Getter for <code>PUBLIC.PAGE.CHECKSUM</code>.
     */
    public byte[] getChecksum() {
        return (byte[]) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Long, String, String, Timestamp, Timestamp, byte[]> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Long, String, String, Timestamp, Timestamp, byte[]> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Page.PAGE.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Page.PAGE.PATH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Page.PAGE.TITLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field4() {
        return Page.PAGE.CREATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field5() {
        return Page.PAGE.LAST_MODIFIED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<byte[]> field6() {
        return Page.PAGE.CHECKSUM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getPath();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getTitle();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value4() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value5() {
        return getLastModifiedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] value6() {
        return getChecksum();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PageRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PageRecord value2(String value) {
        setPath(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PageRecord value3(String value) {
        setTitle(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PageRecord value4(Timestamp value) {
        setCreatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PageRecord value5(Timestamp value) {
        setLastModifiedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PageRecord value6(byte... value) {
        setChecksum(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PageRecord values(Long value1, String value2, String value3, Timestamp value4, Timestamp value5, byte[] value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PageRecord
     */
    public PageRecord() {
        super(Page.PAGE);
    }

    /**
     * Create a detached, initialised PageRecord
     */
    public PageRecord(Long id, String path, String title, Timestamp createdAt, Timestamp lastModifiedAt, byte[] checksum) {
        super(Page.PAGE);

        set(0, id);
        set(1, path);
        set(2, title);
        set(3, createdAt);
        set(4, lastModifiedAt);
        set(5, checksum);
    }
}
