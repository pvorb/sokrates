/*
 * This file is generated by jOOQ.
*/
package de.vorb.sokrates.db.jooq;


import de.vorb.sokrates.db.jooq.tables.FlywaySchemaHistory;
import de.vorb.sokrates.db.jooq.tables.Page;
import de.vorb.sokrates.db.jooq.tables.PageTag;
import de.vorb.sokrates.db.jooq.tables.Tag;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Public extends SchemaImpl {

    private static final long serialVersionUID = 819204179;

    /**
     * The reference instance of <code>PUBLIC</code>
     */
    public static final Public PUBLIC = new Public();

    /**
     * The table <code>PUBLIC.PAGE</code>.
     */
    public final Page PAGE = de.vorb.sokrates.db.jooq.tables.Page.PAGE;

    /**
     * The table <code>PUBLIC.PAGE_TAG</code>.
     */
    public final PageTag PAGE_TAG = de.vorb.sokrates.db.jooq.tables.PageTag.PAGE_TAG;

    /**
     * The table <code>PUBLIC.TAG</code>.
     */
    public final Tag TAG = de.vorb.sokrates.db.jooq.tables.Tag.TAG;

    /**
     * The table <code>PUBLIC.flyway_schema_history</code>.
     */
    public final FlywaySchemaHistory FLYWAY_SCHEMA_HISTORY = de.vorb.sokrates.db.jooq.tables.FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY;

    /**
     * No further instances allowed
     */
    private Public() {
        super("PUBLIC", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            Page.PAGE,
            PageTag.PAGE_TAG,
            Tag.TAG,
            FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY);
    }
}
